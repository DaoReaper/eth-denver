{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guard_",
          "type": "address"
        }
      ],
      "name": "NotIERC165Compliant",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "name": "ChangedGuard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getGuard",
      "outputs": [
        {
          "internalType": "address",
          "name": "_guard",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guard",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_guard",
          "type": "address"
        }
      ],
      "name": "setGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506103b0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780637ceab3b1146100715780638da5cb5b146100a0578063c9106389146100b1578063e19a9dd9146100c2578063f2fde38b146100d5575b600080fd5b61006f6100e8565b005b606554610084906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6033546001600160a01b0316610084565b6065546001600160a01b0316610084565b61006f6100d0366004610328565b6100fc565b61006f6100e3366004610328565b610203565b6100f061027c565b6100fa60006102d6565b565b61010461027c565b6001600160a01b038116156101af576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101829190610358565b6101af576040516358b7533f60e11b81526001600160a01b03821660048201526024015b60405180910390fd5b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa29060200160405180910390a150565b61020b61027c565b6001600160a01b0381166102705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a6565b610279816102d6565b50565b6033546001600160a01b031633146100fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561033a57600080fd5b81356001600160a01b038116811461035157600080fd5b9392505050565b60006020828403121561036a57600080fd5b8151801515811461035157600080fdfea26469706673582212208f62751d1f6e79926228979cf99a346559e3c1435743cad1df01b6985a9e331764736f6c63430008110033",
    "sourceMap": "324:764:36:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780637ceab3b1146100715780638da5cb5b146100a0578063c9106389146100b1578063e19a9dd9146100c2578063f2fde38b146100d5575b600080fd5b61006f6100e8565b005b606554610084906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6033546001600160a01b0316610084565b6065546001600160a01b0316610084565b61006f6100d0366004610328565b6100fc565b61006f6100e3366004610328565b610203565b6100f061027c565b6100fa60006102d6565b565b61010461027c565b6001600160a01b038116156101af576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101829190610358565b6101af576040516358b7533f60e11b81526001600160a01b03821660048201526024015b60405180910390fd5b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa29060200160405180910390a150565b61020b61027c565b6001600160a01b0381166102705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a6565b610279816102d6565b50565b6033546001600160a01b031633146100fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561033a57600080fd5b81356001600160a01b038116811461035157600080fd5b9392505050565b60006020828403121561036a57600080fd5b8151801515811461035157600080fdfea26469706673582212208f62751d1f6e79926228979cf99a346559e3c1435743cad1df01b6985a9e331764736f6c63430008110033",
    "sourceMap": "324:764:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2071:101:39;;;:::i;:::-;;371:20:36;;;;;-1:-1:-1;;;;;371:20:36;;;;;;-1:-1:-1;;;;;178:32:58;;;160:51;;148:2;133:18;371:20:36;;;;;;;1441:85:39;1513:6;;-1:-1:-1;;;;;1513:6:39;1441:85;;998:88:36;1074:5;;-1:-1:-1;;;;;1074:5:36;998:88;;696:296;;;;;;:::i;:::-;;:::i;2321:198:39:-;;;;;;:::i;:::-;;:::i;2071:101::-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;696:296:36:-;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;763:20:36;::::1;::::0;759:169:::1;;804:61;::::0;-1:-1:-1;;;804:61:36;;-1:-1:-1;;;804:61:36::1;::::0;::::1;657:52:58::0;-1:-1:-1;;;;;804:35:36;::::1;::::0;::::1;::::0;630:18:58;;804:61:36::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;799:118;;890:27;::::0;-1:-1:-1;;;890:27:36;;-1:-1:-1;;;;;178:32:58;;890:27:36::1;::::0;::::1;160:51:58::0;133:18;;890:27:36::1;;;;;;;;799:118;937:5;:14:::0;;-1:-1:-1;;;;;;937:14:36::1;-1:-1:-1::0;;;;;937:14:36;::::1;::::0;;::::1;::::0;;;966:19:::1;::::0;160:51:58;;;966:19:36::1;::::0;148:2:58;133:18;966:19:36::1;;;;;;;696:296:::0;:::o;2321:198:39:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:39;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:39;;1204:2:58;2401:73:39::1;::::0;::::1;1186:21:58::0;1243:2;1223:18;;;1216:30;1282:34;1262:18;;;1255:62;-1:-1:-1;;;1333:18:58;;;1326:36;1379:19;;2401:73:39::1;1002:402:58::0;2401:73:39::1;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;1599:130::-;1513:6;;-1:-1:-1;;;;;1513:6:39;929:10:42;1662:23:39;1654:68;;;;-1:-1:-1;;;1654:68:39;;1611:2:58;1654:68:39;;;1593:21:58;;;1630:18;;;1623:30;1689:34;1669:18;;;1662:62;1741:18;;1654:68:39;1409:356:58;2673:187:39;2765:6;;;-1:-1:-1;;;;;2781:17:39;;;-1:-1:-1;;;;;;2781:17:39;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;222:286:58:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:58;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:58:o;720:277::-;787:6;840:2;828:9;819:7;815:23;811:32;808:52;;;856:1;853;846:12;808:52;888:9;882:16;941:5;934:13;927:21;920:5;917:32;907:60;;963:1;960;953:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getGuard()": "c9106389",
    "guard()": "7ceab3b1",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setGuard(address)": "e19a9dd9",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guard_\",\"type\":\"address\"}],\"name\":\"NotIERC165Compliant\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"ChangedGuard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getGuard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_guard\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_guard\",\"type\":\"address\"}],\"name\":\"setGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setGuard(address)\":{\"details\":\"Set a guard that checks transactions before execution.\",\"params\":{\"_guard\":\"The address of the guard to be used or the 0 address to disable the guard.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Guardable - A contract that manages fallback calls made to this contract\",\"version\":1},\"userdoc\":{\"errors\":{\"NotIERC165Compliant(address)\":[{\"notice\":\"`guard_` does not implement IERC165.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@gnosis.pm/zodiac/contracts/guard/Guardable.sol\":\"Guardable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"node_modules/@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol\":{\"keccak256\":\"0xa825848d06a1fc3cb7ad86727c669c8fc6b3bd8dbe419a617830ddcd5e245e47\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://58bd190f4bb876471908d6145c6bebb9a22b5c9183192ffe199f4d94753f36bb\",\"dweb:/ipfs/QmYioir1PsjbCWAdCrFGJQiGHZM65umtb8qUSa63cb5Djq\"]},\"node_modules/@gnosis.pm/zodiac/contracts/guard/Guardable.sol\":{\"keccak256\":\"0xebdcfbe7f0822d8afcc21a1ca8d809417b438cc8b27c3547190a1627a9f5110f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b1c6c35a0ed50d561d819c60423b7a5e6c7cbeaf61c5e0b83dab210def1dd4ec\",\"dweb:/ipfs/QmSz8F6MtuYZMvMJDmfpt8VxHFeVexqS7mpWJE6kuJ8ZAF\"]},\"node_modules/@gnosis.pm/zodiac/contracts/interfaces/IGuard.sol\":{\"keccak256\":\"0xd0d855accbc5fba81c67ab22cdbb03325a8a4d7f6b7e981d1ff0fec3178e464d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b51c586b33cc97caebe85472855bbb4c56a4e387b14cde2c8110b12ace7ba6b\",\"dweb:/ipfs/QmYtVdNKa5D2A4cEdTg9cYwrDio7TdNKtbAHc86x33W5wt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotIERC165Compliant"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedGuard",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuard",
          "outputs": [
            {
              "internalType": "address",
              "name": "_guard",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "guard",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_guard",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGuard"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setGuard(address)": {
            "details": "Set a guard that checks transactions before execution.",
            "params": {
              "_guard": "The address of the guard to be used or the 0 address to disable the guard."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gnosis.pm/=node_modules/@gnosis.pm/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@gnosis.pm/zodiac/contracts/guard/Guardable.sol": "Guardable"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol": {
        "keccak256": "0xa825848d06a1fc3cb7ad86727c669c8fc6b3bd8dbe419a617830ddcd5e245e47",
        "urls": [
          "bzz-raw://58bd190f4bb876471908d6145c6bebb9a22b5c9183192ffe199f4d94753f36bb",
          "dweb:/ipfs/QmYioir1PsjbCWAdCrFGJQiGHZM65umtb8qUSa63cb5Djq"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/zodiac/contracts/guard/Guardable.sol": {
        "keccak256": "0xebdcfbe7f0822d8afcc21a1ca8d809417b438cc8b27c3547190a1627a9f5110f",
        "urls": [
          "bzz-raw://b1c6c35a0ed50d561d819c60423b7a5e6c7cbeaf61c5e0b83dab210def1dd4ec",
          "dweb:/ipfs/QmSz8F6MtuYZMvMJDmfpt8VxHFeVexqS7mpWJE6kuJ8ZAF"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/zodiac/contracts/interfaces/IGuard.sol": {
        "keccak256": "0xd0d855accbc5fba81c67ab22cdbb03325a8a4d7f6b7e981d1ff0fec3178e464d",
        "urls": [
          "bzz-raw://4b51c586b33cc97caebe85472855bbb4c56a4e387b14cde2c8110b12ace7ba6b",
          "dweb:/ipfs/QmYtVdNKa5D2A4cEdTg9cYwrDio7TdNKtbAHc86x33W5wt"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@gnosis.pm/zodiac/contracts/guard/Guardable.sol",
    "id": 31062,
    "exportedSymbols": {
      "AddressUpgradeable": [
        31770
      ],
      "BaseGuard": [
        30993
      ],
      "ContextUpgradeable": [
        31812
      ],
      "Enum": [
        30363
      ],
      "Guardable": [
        31061
      ],
      "IERC165": [
        32690
      ],
      "IGuard": [
        31185
      ],
      "Initializable": [
        31486
      ],
      "OwnableUpgradeable": [
        31317
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1047:36",
    "nodes": [
      {
        "id": 30995,
        "nodeType": "PragmaDirective",
        "src": "42:31:36",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 30996,
        "nodeType": "ImportDirective",
        "src": "75:61:36",
        "nodes": [],
        "absolutePath": "node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol",
        "file": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31062,
        "sourceUnit": 30364,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30997,
        "nodeType": "ImportDirective",
        "src": "137:75:36",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31062,
        "sourceUnit": 31318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30998,
        "nodeType": "ImportDirective",
        "src": "213:25:36",
        "nodes": [],
        "absolutePath": "node_modules/@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol",
        "file": "./BaseGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31062,
        "sourceUnit": 30994,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31061,
        "nodeType": "ContractDefinition",
        "src": "324:764:36",
        "nodes": [
          {
            "id": 31003,
            "nodeType": "VariableDeclaration",
            "src": "371:20:36",
            "nodes": [],
            "constant": false,
            "functionSelector": "7ceab3b1",
            "mutability": "mutable",
            "name": "guard",
            "nameLocation": "386:5:36",
            "scope": 31061,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31002,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:36",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31007,
            "nodeType": "EventDefinition",
            "src": "398:34:36",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa2",
            "name": "ChangedGuard",
            "nameLocation": "404:12:36",
            "parameters": {
              "id": 31006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31005,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "guard",
                  "nameLocation": "425:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 31007,
                  "src": "417:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "416:15:36"
            }
          },
          {
            "id": 31012,
            "nodeType": "ErrorDefinition",
            "src": "483:42:36",
            "nodes": [],
            "documentation": {
              "id": 31008,
              "nodeType": "StructuredDocumentation",
              "src": "438:40:36",
              "text": "`guard_` does not implement IERC165."
            },
            "errorSelector": "b16ea67e",
            "name": "NotIERC165Compliant",
            "nameLocation": "489:19:36",
            "parameters": {
              "id": 31011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31010,
                  "mutability": "mutable",
                  "name": "guard_",
                  "nameLocation": "517:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 31012,
                  "src": "509:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:16:36"
            }
          },
          {
            "id": 31052,
            "nodeType": "FunctionDefinition",
            "src": "696:296:36",
            "nodes": [],
            "body": {
              "id": 31051,
              "nodeType": "Block",
              "src": "749:243:36",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 31025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31020,
                      "name": "_guard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31015,
                      "src": "763:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 31023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "781:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 31022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "773:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 31021,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "773:7:36",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 31024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "773:10:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "763:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31042,
                  "nodeType": "IfStatement",
                  "src": "759:169:36",
                  "trueBody": {
                    "id": 31041,
                    "nodeType": "Block",
                    "src": "785:143:36",
                    "statements": [
                      {
                        "condition": {
                          "id": 31035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "803:62:36",
                          "subExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 31031,
                                      "name": "IGuard",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31185,
                                      "src": "845:6:36",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGuard_$31185_$",
                                        "typeString": "type(contract IGuard)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IGuard_$31185_$",
                                        "typeString": "type(contract IGuard)"
                                      }
                                    ],
                                    "id": 31030,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "840:4:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 31032,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "840:12:36",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IGuard_$31185",
                                    "typeString": "type(contract IGuard)"
                                  }
                                },
                                "id": 31033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "853:11:36",
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "840:24:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 31027,
                                    "name": "_guard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31015,
                                    "src": "814:6:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 31026,
                                  "name": "BaseGuard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30993,
                                  "src": "804:9:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_BaseGuard_$30993_$",
                                    "typeString": "type(contract BaseGuard)"
                                  }
                                },
                                "id": 31028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "804:17:36",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseGuard_$30993",
                                  "typeString": "contract BaseGuard"
                                }
                              },
                              "id": 31029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "822:17:36",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30958,
                              "src": "804:35:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) pure external returns (bool)"
                              }
                            },
                            "id": 31034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "804:61:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 31040,
                        "nodeType": "IfStatement",
                        "src": "799:118:36",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 31037,
                                "name": "_guard",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31015,
                                "src": "910:6:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 31036,
                              "name": "NotIERC165Compliant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31012,
                              "src": "890:19:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 31038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "890:27:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31039,
                          "nodeType": "RevertStatement",
                          "src": "883:34:36"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 31045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31043,
                      "name": "guard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31003,
                      "src": "937:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31044,
                      "name": "_guard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31015,
                      "src": "945:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "937:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31046,
                  "nodeType": "ExpressionStatement",
                  "src": "937:14:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 31048,
                        "name": "guard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31003,
                        "src": "979:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31047,
                      "name": "ChangedGuard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31007,
                      "src": "966:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "966:19:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31050,
                  "nodeType": "EmitStatement",
                  "src": "961:24:36"
                }
              ]
            },
            "documentation": {
              "id": 31013,
              "nodeType": "StructuredDocumentation",
              "src": "531:160:36",
              "text": "@dev Set a guard that checks transactions before execution.\n @param _guard The address of the guard to be used or the 0 address to disable the guard."
            },
            "functionSelector": "e19a9dd9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31018,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31017,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "739:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31231,
                  "src": "739:9:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "739:9:36"
              }
            ],
            "name": "setGuard",
            "nameLocation": "705:8:36",
            "parameters": {
              "id": 31016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31015,
                  "mutability": "mutable",
                  "name": "_guard",
                  "nameLocation": "722:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 31052,
                  "src": "714:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "713:16:36"
            },
            "returnParameters": {
              "id": 31019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "749:0:36"
            },
            "scope": 31061,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31060,
            "nodeType": "FunctionDefinition",
            "src": "998:88:36",
            "nodes": [],
            "body": {
              "id": 31059,
              "nodeType": "Block",
              "src": "1057:29:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31057,
                    "name": "guard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31003,
                    "src": "1074:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 31056,
                  "id": 31058,
                  "nodeType": "Return",
                  "src": "1067:12:36"
                }
              ]
            },
            "functionSelector": "c9106389",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGuard",
            "nameLocation": "1007:8:36",
            "parameters": {
              "id": 31053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:2:36"
            },
            "returnParameters": {
              "id": 31056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31055,
                  "mutability": "mutable",
                  "name": "_guard",
                  "nameLocation": "1049:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 31060,
                  "src": "1041:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1040:16:36"
            },
            "scope": 31061,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31000,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "346:18:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31317,
              "src": "346:18:36"
            },
            "id": 31001,
            "nodeType": "InheritanceSpecifier",
            "src": "346:18:36"
          }
        ],
        "canonicalName": "Guardable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30999,
          "nodeType": "StructuredDocumentation",
          "src": "240:84:36",
          "text": "@title Guardable - A contract that manages fallback calls made to this contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31061,
          31317,
          31812,
          31486
        ],
        "name": "Guardable",
        "nameLocation": "333:9:36",
        "scope": 31062,
        "usedErrors": [
          31012
        ]
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 36
}